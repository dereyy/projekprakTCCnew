steps:
  # STEP 1: Download .env dari Cloud Storage dan ubah ke YAML
  - name: "gcr.io/cloud-builders/gsutil"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "ðŸ“¥ Mengambil .env dari Cloud Storage..."
        gsutil cp gs://projekakhir/.env /workspace/.env

        echo "ðŸ”„ Mengubah .env ke YAML format..."
        echo "env_variables:" > /workspace/env.yaml

        while IFS='=' read -r line; do
          # Lewati baris kosong dan komentar
          [[ -z "$line" || "$line" == \#* ]] && continue

          # Pisahkan key dan value menggunakan awk, sekaligus trim spasi dan kutip
          key=$(echo "$line" | awk -F '=' '{gsub(/^[ \t"]+|[ \t"]+$/, "", $1); print $1}')
          value=$(echo "$line" | awk -F '=' '{gsub(/^[ \t"]+|[ \t"]+$/, "", $2); print $2}')

          [[ "$key" == "PORT" ]] && continue

          echo "  $key: \"$value\"" >> /workspace/env.yaml
        done < /workspace/.env


        echo -e "\nâœ… YAML akhir (disensor untuk password):"
        cat /workspace/env.yaml | sed 's/DB_PASSWORD: ".*"/DB_PASSWORD: "****"/g'

  # STEP 2: Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/projek-akhir", "."]
    dir: "be"

  # STEP 3: Push ke Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/projek-akhir"]

  # STEP 4: Deploy ke Cloud Run menggunakan env.yaml
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      - "run"
      - "deploy"
      - "projek-akhir"
      - "--image"
      - "gcr.io/$PROJECT_ID/projek-akhir"
      - "--timeout"
      - "360s"
      - "--port"
      - "5001"
      - "--region"
      - "us-central1"
      - "--allow-unauthenticated"
      - "--env-vars-file"
      - "/workspace/env.yaml"

# Hanya log ke Cloud Logging
options:
  logging: CLOUD_LOGGING_ONLY
