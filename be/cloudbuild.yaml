steps:
  # Mengambil file .env dari Cloud Storage bucket ke workspace
  - name: "gcr.io/cloud-builders/gsutil"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Copying .env from bucket to workspace..."
        gsutil cp gs://projekakhir/.env /workspace/.env
        # Membaca file .env dan menyiapkan string untuk --set-env-vars
        echo "Reading environment variables from .env file..."
        ENV_VARS=$(grep -v '^#' /workspace/.env | grep -v '^$' | tr '\n' ',' | sed 's/,$//')
        echo "Environment variables prepared (without sensitive values):"
        echo "$ENV_VARS" | sed 's/DB_PASSWORD=[^,]*/DB_PASSWORD=****/g'
        # Simpan ke file untuk digunakan di step berikutnya
        echo "$ENV_VARS" > /workspace/env_vars.txt

  # Membuat image dengan perintah "cloud build -t gcr.io/$PROJECT_ID/projek-akhir ."
  # Project ID akan secara otomatis terisi ketika melakukan deploy di project yg dipilih
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/projek-akhir", "."]
    dir: "be"

  # Verifikasi file .env dan environment variables di dalam image
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "=== Checking .env file inside the image ==="
        docker run --rm gcr.io/$PROJECT_ID/projek-akhir ls -la /app/.env
        echo -e "\n=== Content of .env file inside the image ==="
        docker run --rm gcr.io/$PROJECT_ID/projek-akhir cat /app/.env | sed 's/DB_PASSWORD=[^$]*/DB_PASSWORD=****/g'
        echo -e "\n=== Testing environment variables inside the image ==="
        docker run --rm gcr.io/$PROJECT_ID/projek-akhir node -e "
          require('dotenv').config();
          console.log('DB_HOST:', process.env.DB_HOST);
          console.log('DB_NAME:', process.env.DB_NAME);
          console.log('DB_USERNAME:', process.env.DB_USERNAME);
          console.log('DB_PASSWORD:', process.env.DB_PASSWORD ? 'Set' : 'Not Set');
          console.log('ACCESS_TOKEN_SECRET:', process.env.ACCESS_TOKEN_SECRET ? 'Set' : 'Not Set');
          console.log('REFRESH_TOKEN_SECRET:', process.env.REFRESH_TOKEN_SECRET ? 'Set' : 'Not Set');
        "

  # Meng-upload/push image yg telah dibuat ke Artifact Registry
  # Pada bagian ini, dijalankan perintah "docker push 'gcr.io/$PROJECT_ID/projek-akhir'"
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/projek-akhir"]

  # Melakukan deploy ke cloud run dengan environment variables dari file
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # Baca environment variables dari file
        ENV_VARS=$(cat /workspace/env_vars.txt)
        echo "Deploying with environment variables (without sensitive values)..."
        echo "$ENV_VARS" | sed 's/DB_PASSWORD=[^,]*/DB_PASSWORD=****/g'
        gcloud run deploy projek-akhir \
          --image gcr.io/$PROJECT_ID/projek-akhir \
          --timeout 360s \
          --port 5001 \
          --region us-central1 \
          --allow-unauthenticated \
          --set-env-vars "$ENV_VARS"

# Log hanya akan disimpan di Google Cloud Logging
# Log tidak akan disimpan di Google Cloud Storage (butuh hak akses).
options:
  logging: CLOUD_LOGGING_ONLY
